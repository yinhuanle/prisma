generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model admin {
  id          Int      @id @default(autoincrement())
  username    String   @unique(map: "admin_username_unique") @db.VarChar(100)
  password    String   @db.VarChar(255)
  create_time DateTime @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model cart {
  id                       Int      @id @default(autoincrement())
  user_id                  Int
  product_id               Int
  product_specification_id Int      @default(0)
  count                    Int
  checked                  Int      @default(1) @db.TinyInt
  create_time              DateTime @db.DateTime(0)
  product                  product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cart_product_id_foreign")
  user                     user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "cart_user_id_foreign")

  @@index([product_id], map: "cart_product_id_foreign")
  @@index([user_id], map: "cart_user_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model coupon {
  id          Int       @id @default(autoincrement())
  user_id     Int       @default(0)
  name        String    @db.VarChar(255)
  amount      Decimal   @db.Decimal(10, 2)
  min         Decimal   @db.Decimal(10, 2)
  start_time  DateTime  @db.DateTime(0)
  end_time    DateTime  @db.DateTime(0)
  status      Int       @default(0) @db.TinyInt
  create_time DateTime  @db.DateTime(0)
  use_time    DateTime? @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order {
  id                       Int       @id @default(autoincrement())
  user_id                  Int
  order_no                 String    @db.VarChar(255)
  total_price              Decimal   @db.Decimal(10, 2)
  actual_price             Decimal   @db.Decimal(10, 2)
  status                   Int       @default(0) @db.TinyInt
  pay_time                 DateTime? @db.DateTime(0)
  create_time              DateTime  @db.DateTime(0)
  address                  String    @db.VarChar(255)
  transaction_id           String?   @db.VarChar(255)
  delete_status            Int       @default(0) @db.TinyInt
  ip                       String    @db.VarChar(255)
  remark                   String    @db.VarChar(255)
  product_id               Int
  product_specification_id Int       @default(0)
  coupon_id                Int       @default(0)
  count                    Int
  name                     String    @db.VarChar(255)
  phone                    String    @db.VarChar(255)
  express_no               String?   @db.VarChar(255)
  express_company          String?   @db.VarChar(255)
  express_time             DateTime? @db.DateTime(0)
  sign_time                DateTime? @db.DateTime(0)
  user                     user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_user_id_foreign")

  @@index([create_time], map: "idx_create_time")
  @@index([status], map: "idx_state")
  @@index([user_id], map: "order_user_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product {
  id                    Int                     @id @default(autoincrement())
  uuid                  String                  @unique(map: "product_uuid_unique") @db.VarChar(36)
  name                  String                  @db.VarChar(255)
  category              String                  @db.VarChar(255)
  views                 Int
  brief                 String                  @db.VarChar(512)
  sales                 Int
  actual_sales          Int
  description           String                  @db.Text
  icon                  String                  @db.VarChar(512)
  status                Int                     @default(0) @db.TinyInt
  category_id           Int                     @default(0)
  postage               Decimal                 @default(0.00) @db.Decimal(10, 2)
  popularity            Int                     @default(1)
  create_time           DateTime                @db.DateTime(0)
  update_time           DateTime                @db.DateTime(0)
  cart                  cart[]
  product_comment       product_comment[]
  product_specification product_specification[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_category {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  icon        String   @db.VarChar(255)
  create_time DateTime @db.DateTime(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_comment {
  id           Int      @id @default(autoincrement())
  product_id   Int
  user_id      Int
  content      String   @db.VarChar(255)
  create_time  DateTime @db.DateTime(0)
  star         Int      @default(5) @db.TinyInt
  is_anonymous Int      @default(0) @db.TinyInt
  product      product  @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_comment_product_id_foreign")
  user         user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_comment_user_id_foreign")

  @@index([product_id], map: "product_comment_product_id_foreign")
  @@index([user_id], map: "product_comment_user_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_specification {
  id         Int     @id @default(autoincrement())
  product_id Int
  name       String  @db.VarChar(255)
  value      Decimal @db.Decimal(10, 2)
  stock      Int
  product    product @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_specification_product_id_foreign")

  @@index([product_id], map: "product_specification_product_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model system {
  id              Int    @id @default(autoincrement())
  swiper          String @db.VarChar(512)
  notice          String @db.VarChar(255)
  notice_switch   Int    @default(0) @db.TinyInt
  notice_content  String @db.VarChar(255)
  category        String @db.VarChar(50)
  service_qr_code String @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model system_message {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  content     String   @db.VarChar(255)
  create_time DateTime @db.DateTime(0)
  type        String?  @default("error") @db.VarChar(10)
  isread      Int      @default(0) @db.TinyInt
  copy        String?  @db.VarChar(255)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user {
  id              Int               @id @default(autoincrement())
  uuid            String            @unique(map: "user_uuid_unique") @db.VarChar(36)
  username        String?           @db.VarChar(100)
  openid          String            @db.VarChar(255)
  session_key     String            @db.VarChar(255)
  phone           String            @db.VarChar(255)
  status          Int               @default(1) @db.TinyInt
  create_time     DateTime          @db.DateTime(0)
  cart            cart[]
  order           order[]
  product_comment product_comment[]
  user_address    user_address[]
  Post            Post[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user_address {
  id             Int    @id @default(autoincrement())
  user_id        Int
  name           String @db.VarChar(255)
  phone          String @db.VarChar(255)
  province       String @db.VarChar(255)
  city           String @db.VarChar(255)
  county         String @db.VarChar(255)
  address_detail String @db.VarChar(255)
  is_default     Int    @default(0) @db.TinyInt
  user           user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_address_user_id_foreign")

  @@index([user_id], map: "user_address_user_id_foreign")
}

// Data model
model Post {
  id          Int     @id @default(autoincrement())
  title       String
  content     String?
  published   String? @default("false")
  create_time BigInt
  update_time BigInt?
  author      user?   @relation(fields: [authorId], references: [id])
  authorId    Int?
}

// model User {
//   id    Int     @id @default(autoincrement())
//   email String  @unique
//   name  String?
//   posts Post[]
// }
